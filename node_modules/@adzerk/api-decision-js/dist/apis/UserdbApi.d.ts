/**
 * Adzerk Decision API
 * Adzerk Decision API
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { ConsentRequest } from '../models';
export interface AddCustomPropertiesRequest {
    networkId: number;
    userKey: string;
    body?: object;
}
export interface AddInterestsRequest {
    networkId: number;
    userKey: string;
    interest: string;
}
export interface AddRetargetingSegmentRequest {
    networkId: number;
    advertiserId: number;
    retargetingSegmentId: number;
    userKey: string;
}
export interface ForgetRequest {
    networkId: number;
    userKey: string;
}
export interface GdprConsentRequest {
    networkId: number;
    consentRequest?: ConsentRequest;
}
export interface IpOverrideRequest {
    networkId: number;
    userKey: string;
    ip: string;
}
export interface MatchUserRequest {
    networkId: number;
    userKey: string;
    partnerId: number;
    userId: number;
}
export interface OptOutRequest {
    networkId: number;
    userKey: string;
}
export interface ReadRequest {
    networkId: number;
    userKey: string;
}
/**
 *
 */
export declare class UserdbApi extends runtime.BaseAPI {
    /**
     * Add Custom Properties to a User
     */
    addCustomPropertiesRaw(requestParameters: AddCustomPropertiesRequest): Promise<runtime.ApiResponse<Blob>>;
    /**
     * Add Custom Properties to a User
     */
    addCustomProperties(networkId: number, userKey: string, body?: object): Promise<Blob>;
    /**
     * Add Interests to a User
     */
    addInterestsRaw(requestParameters: AddInterestsRequest): Promise<runtime.ApiResponse<Blob>>;
    /**
     * Add Interests to a User
     */
    addInterests(networkId: number, userKey: string, interest: string): Promise<Blob>;
    /**
     * Add User to a Retargeting Segment
     */
    addRetargetingSegmentRaw(requestParameters: AddRetargetingSegmentRequest): Promise<runtime.ApiResponse<Blob>>;
    /**
     * Add User to a Retargeting Segment
     */
    addRetargetingSegment(networkId: number, advertiserId: number, retargetingSegmentId: number, userKey: string): Promise<Blob>;
    /**
     * Forget User
     */
    forgetRaw(requestParameters: ForgetRequest): Promise<runtime.ApiResponse<void>>;
    /**
     * Forget User
     */
    forget(networkId: number, userKey: string): Promise<void>;
    /**
     * GDPR Consent
     */
    gdprConsentRaw(requestParameters: GdprConsentRequest): Promise<runtime.ApiResponse<Blob>>;
    /**
     * GDPR Consent
     */
    gdprConsent(networkId: number, consentRequest?: ConsentRequest): Promise<Blob>;
    /**
     * IP Address Override
     */
    ipOverrideRaw(requestParameters: IpOverrideRequest): Promise<runtime.ApiResponse<Blob>>;
    /**
     * IP Address Override
     */
    ipOverride(networkId: number, userKey: string, ip: string): Promise<Blob>;
    /**
     * User Matching
     */
    matchUserRaw(requestParameters: MatchUserRequest): Promise<runtime.ApiResponse<Blob>>;
    /**
     * User Matching
     */
    matchUser(networkId: number, userKey: string, partnerId: number, userId: number): Promise<Blob>;
    /**
     * Opt-Out a User
     */
    optOutRaw(requestParameters: OptOutRequest): Promise<runtime.ApiResponse<Blob>>;
    /**
     * Opt-Out a User
     */
    optOut(networkId: number, userKey: string): Promise<Blob>;
    /**
     * Read a User\'s UserDB Record
     */
    readRaw(requestParameters: ReadRequest): Promise<runtime.ApiResponse<object>>;
    /**
     * Read a User\'s UserDB Record
     */
    read(networkId: number, userKey: string): Promise<object>;
}
